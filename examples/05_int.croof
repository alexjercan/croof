# def abs : Z -> Z
#
# abs(0) = 0
# forall a : Z, 0 > a => abs(a) = neg(a)
# forall a : Z, a > 0 => abs(a) = a

def + : Z -> Z -> Z

forall a : Z => 0 + a = a # Identity for Addition
forall a : Z, forall b : Z => succ(a) + b = a + succ(b)
forall a : Z, forall b : Z => succ(a) + neg(succ(b)) = a + neg(b)

forall a : Z, forall b : Z => a + b = b + a # Commutativity of Addition
forall a : Z, forall b : Z, forall c : Z => (a + b) + c = a + (b + c) # Associativity of Addition

eval 0 + -1
eval 1 + -1
