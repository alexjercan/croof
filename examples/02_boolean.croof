def Bool = {"true", "false"}

def && : Bool -> Bool -> Bool

"true" && "true" = "true"
"true" && "false" = "false"
"false" && "true" = "false"
"false" && "false" = "false"

def || : Bool -> Bool -> Bool

"true" || "true" = "true"
"true" || "false" = "true"
"false" || "true" = "true"
"false" || "false" = "false"

forall a : Bool => (a) = a

eval "true" && "true" && "false"
eval ("true" || "false") && "false"
eval "true" || ("false" && "false")
