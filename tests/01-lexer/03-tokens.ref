tests/01-lexer/03-tokens.croof:1:1: Forall
tests/01-lexer/03-tokens.croof:1:8: Identifier(a)
tests/01-lexer/03-tokens.croof:1:10: Colon
tests/01-lexer/03-tokens.croof:1:12: Type(N)
tests/01-lexer/03-tokens.croof:1:14: Then
tests/01-lexer/03-tokens.croof:1:17: LParen
tests/01-lexer/03-tokens.croof:1:18: Identifier(a)
tests/01-lexer/03-tokens.croof:1:19: RParen
tests/01-lexer/03-tokens.croof:1:21: Equal
tests/01-lexer/03-tokens.croof:1:23: Identifier(a)
tests/01-lexer/03-tokens.croof:3:1: Def
tests/01-lexer/03-tokens.croof:3:5: Operator(+)
tests/01-lexer/03-tokens.croof:3:7: Colon
tests/01-lexer/03-tokens.croof:3:9: Type(N)
tests/01-lexer/03-tokens.croof:3:11: Arrow
tests/01-lexer/03-tokens.croof:3:14: Type(N)
tests/01-lexer/03-tokens.croof:3:16: Arrow
tests/01-lexer/03-tokens.croof:3:19: Type(N)
tests/01-lexer/03-tokens.croof:5:1: Forall
tests/01-lexer/03-tokens.croof:5:8: Identifier(a)
tests/01-lexer/03-tokens.croof:5:10: Colon
tests/01-lexer/03-tokens.croof:5:12: Type(N)
tests/01-lexer/03-tokens.croof:5:28: Then
tests/01-lexer/03-tokens.croof:5:31: Number(0)
tests/01-lexer/03-tokens.croof:5:33: Operator(+)
tests/01-lexer/03-tokens.croof:5:35: Identifier(a)
tests/01-lexer/03-tokens.croof:5:37: Equal
tests/01-lexer/03-tokens.croof:5:39: Identifier(a)
tests/01-lexer/03-tokens.croof:6:1: Forall
tests/01-lexer/03-tokens.croof:6:8: Identifier(a)
tests/01-lexer/03-tokens.croof:6:10: Colon
tests/01-lexer/03-tokens.croof:6:12: Type(N)
tests/01-lexer/03-tokens.croof:6:13: Comma
tests/01-lexer/03-tokens.croof:6:15: Forall
tests/01-lexer/03-tokens.croof:6:22: Identifier(b)
tests/01-lexer/03-tokens.croof:6:24: Colon
tests/01-lexer/03-tokens.croof:6:26: Type(N)
tests/01-lexer/03-tokens.croof:6:28: Then
tests/01-lexer/03-tokens.croof:6:31: Identifier(succ)
tests/01-lexer/03-tokens.croof:6:35: LParen
tests/01-lexer/03-tokens.croof:6:36: Identifier(a)
tests/01-lexer/03-tokens.croof:6:37: RParen
tests/01-lexer/03-tokens.croof:6:39: Operator(+)
tests/01-lexer/03-tokens.croof:6:41: Identifier(b)
tests/01-lexer/03-tokens.croof:6:43: Equal
tests/01-lexer/03-tokens.croof:6:45: Identifier(a)
tests/01-lexer/03-tokens.croof:6:47: Operator(+)
tests/01-lexer/03-tokens.croof:6:49: Identifier(succ)
tests/01-lexer/03-tokens.croof:6:53: LParen
tests/01-lexer/03-tokens.croof:6:54: Identifier(b)
tests/01-lexer/03-tokens.croof:6:55: RParen
tests/01-lexer/03-tokens.croof:8:1: Forall
tests/01-lexer/03-tokens.croof:8:8: Identifier(a)
tests/01-lexer/03-tokens.croof:8:10: Colon
tests/01-lexer/03-tokens.croof:8:12: Type(N)
tests/01-lexer/03-tokens.croof:8:13: Comma
tests/01-lexer/03-tokens.croof:8:15: Forall
tests/01-lexer/03-tokens.croof:8:22: Identifier(b)
tests/01-lexer/03-tokens.croof:8:24: Colon
tests/01-lexer/03-tokens.croof:8:26: Type(N)
tests/01-lexer/03-tokens.croof:8:28: Then
tests/01-lexer/03-tokens.croof:8:31: Identifier(a)
tests/01-lexer/03-tokens.croof:8:33: Operator(+)
tests/01-lexer/03-tokens.croof:8:35: Identifier(b)
tests/01-lexer/03-tokens.croof:8:37: Equal
tests/01-lexer/03-tokens.croof:8:39: Identifier(b)
tests/01-lexer/03-tokens.croof:8:41: Operator(+)
tests/01-lexer/03-tokens.croof:8:43: Identifier(a)
tests/01-lexer/03-tokens.croof:9:1: Forall
tests/01-lexer/03-tokens.croof:9:8: Identifier(a)
tests/01-lexer/03-tokens.croof:9:10: Colon
tests/01-lexer/03-tokens.croof:9:12: Type(N)
tests/01-lexer/03-tokens.croof:9:13: Comma
tests/01-lexer/03-tokens.croof:9:15: Forall
tests/01-lexer/03-tokens.croof:9:22: Identifier(b)
tests/01-lexer/03-tokens.croof:9:24: Colon
tests/01-lexer/03-tokens.croof:9:26: Type(N)
tests/01-lexer/03-tokens.croof:9:27: Comma
tests/01-lexer/03-tokens.croof:9:29: Forall
tests/01-lexer/03-tokens.croof:9:36: Identifier(c)
tests/01-lexer/03-tokens.croof:9:38: Colon
tests/01-lexer/03-tokens.croof:9:40: Type(N)
tests/01-lexer/03-tokens.croof:9:42: Then
tests/01-lexer/03-tokens.croof:9:45: LParen
tests/01-lexer/03-tokens.croof:9:46: Identifier(a)
tests/01-lexer/03-tokens.croof:9:48: Operator(+)
tests/01-lexer/03-tokens.croof:9:50: Identifier(b)
tests/01-lexer/03-tokens.croof:9:51: RParen
tests/01-lexer/03-tokens.croof:9:53: Operator(+)
tests/01-lexer/03-tokens.croof:9:55: Identifier(c)
tests/01-lexer/03-tokens.croof:9:57: Equal
tests/01-lexer/03-tokens.croof:9:59: Identifier(a)
tests/01-lexer/03-tokens.croof:9:61: Operator(+)
tests/01-lexer/03-tokens.croof:9:63: LParen
tests/01-lexer/03-tokens.croof:9:64: Identifier(b)
tests/01-lexer/03-tokens.croof:9:66: Operator(+)
tests/01-lexer/03-tokens.croof:9:68: Identifier(c)
tests/01-lexer/03-tokens.croof:9:69: RParen
